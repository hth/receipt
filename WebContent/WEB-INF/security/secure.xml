<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
             http://www.springframework.org/schema/security
             http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <!--<debug />-->

    <global-method-security mode="aspectj"
                            jsr250-annotations="enabled"
                            pre-post-annotations="enabled"
                            secured-annotations="enabled" />

    <http pattern="/static/**" security="none"/>

    <!-- this does not seems to help here -->
    <!--<http pattern="/index.jsp*" security="none"/>-->

    <http auto-config="true" use-expressions="true">
        <!-- this does not seems to help here -->
        <!--<intercept-url pattern="/index.jsp"-->
        <!--access="permitAll" />-->

        <!--<intercept-url pattern="/signin/**"-->
        <!--access="permitAll" />-->

        <intercept-url pattern="/access/**"
                       access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_TECHNICIAN', 'ROLE_SUPERVISOR')" />

        <intercept-url pattern="/emp/**"
                       access="hasAnyRole('ROLE_TECHNICIAN', 'ROLE_SUPERVISOR')" />

        <intercept-url pattern="/admin/**"
                       access="hasRole('ROLE_ADMIN')" />

        <intercept-url pattern="/monitoring/**"
                       access="hasIpAddress('192.168.1.*')" />

        <form-login default-target-url="/access/landing.htm" />

        <!-- not sure if this will work on https -->
        <intercept-url pattern="/monitoring/**" requires-channel="https"/>
        <!-- this for REST API and all form submission -->
        <!--<intercept-url pattern="/spitter/form" requires-channel="https"/>-->

        <!--<form-login login-processing-url="/static/j_spring_security_check"-->
        <!--login-page="/login"-->
        <!--authentication-failure-url="/login?login_error=true" />-->

        <logout logout-success-url="/"
                delete-cookies="JSESSIONID"
                invalidate-session="true" />

        <remember-me services-ref="rememberMeServices"
                     key="?M.?75:.V_/?ch1ll3rB!m$.2c0fkl1*c.s2M*@#-_xEx34!" />

        <session-management invalid-session-url="/">
            <concurrency-control max-sessions="1"
                                 error-if-maximum-exceeded="true"
                                 expired-url="/" />
        </session-management>

        <csrf />

        <!-- http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/#headers -->
        <headers>
            <cache-control />
            <content-type-options />
            <hsts />
            <frame-options />
            <xss-protection />
        </headers>
    </http>

    <!-- Declare an authentication-manager to use a custom userDetailsService -->
    <authentication-manager>
        <authentication-provider user-service-ref="customUserDetailsService">
            <password-encoder ref="passwordEncoder"/>
        </authentication-provider>
    </authentication-manager>

    <!-- Use a BCrypt encoder since the user's passwords are stored as BCrypt in the database -->
    <beans:bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" id="passwordEncoder"/>

    <beans:bean id="rememberMeServices" class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
        <!--<beans:property name="tokenRepository"      ref="persistentTokenRepositoryImpl" />-->
        <beans:property name="userDetailsService"   ref="customUserDetailsService" />
        <beans:property name="key"                  value="?M.?75:.V_/?ch1ll3rB!m$.2c0fkl1*c.s2M*@#-_xEx34!" />
        <beans:property name="cookieName"           value="receiptofi_session_cookie"/>
        <beans:property name="tokenLength"          value="32"/>
        <!-- three weeks -->
        <beans:property name="tokenValiditySeconds" value="1814400" />
    </beans:bean>
</beans:beans>