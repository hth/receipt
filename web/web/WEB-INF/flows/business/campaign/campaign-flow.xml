<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow
       http://www.springframework.org/schema/webflow/spring-webflow-2.4.xsd">

    <secured attributes="ROLE_BUSINESS" />

    <on-start>
        <set name="conversationScope.campaignId" value="requestParameters.campaignId" type="string" />

        <!--
        Set conversationScope as the id is set after saving, this id is required on hitting back
        browser as it will be used to update instead of creating new campaign
        -->
        <evaluate expression="campaignId == null ?
                                businessCampaignFlowActions.startCampaign() :
                                businessCampaignFlowActions.editCampaign(campaignId)"
                  result="conversationScope.couponCampaign" />
    </on-start>

    <decision-state id="isCampaignPendingApproval">
        <if test="businessCampaignFlowActions.isCampaignPendingApproval(couponCampaign)"
            then="campaignReview"
            else="campaignStart" />
    </decision-state>

    <!-- Need model couponCampaign -->
    <view-state id="campaignStart" model="couponCampaign">
        <transition on="submit" to="validateCampaignDetails" />
        <transition on="cancel" to="home" />
    </view-state>

    <action-state id="validateCampaignDetails">
        <evaluate expression="businessCampaignFlowValidator.validateCampaignDetails(couponCampaign, messageContext)" />
        <transition on="success" to="campaignCoupon">
            <evaluate expression="businessCampaignFlowActions.createUpdateCampaign(couponCampaign)" />
        </transition>
        <transition on="failure" to="campaignStart" />
        <transition on-exception="com.receiptofi.web.flow.exception.BusinessCampaignException"
                    to="campaignStart" />
    </action-state>

    <view-state id="campaignCoupon" model="couponCampaign">
        <transition on="submit" to="validateCampaignCoupon" />
        <transition on="cancel" to="home" />
    </view-state>

    <action-state id="validateCampaignCoupon">
        <evaluate expression="businessCampaignFlowValidator.validateCampaignCoupon(couponCampaign, messageContext)" />
        <transition on="success" to="campaignReview">
            <evaluate expression="businessCampaignFlowActions.createUpdateCampaign(couponCampaign)" />
        </transition>
        <transition on="failure" to="campaignCoupon" />
        <transition on-exception="com.receiptofi.web.flow.exception.BusinessCampaignException"
                    to="campaignCoupon" />
    </action-state>

    <view-state id="campaignReview" model="couponCampaign">
        <transition on="confirm" to="completeCampaign" />
        <transition on="revise" to="campaignStart">
            <set name="conversationScope.campaignId" value="couponCampaign.campaignId" type="string" />
        </transition>
        <transition on="cancel" to="home" />
        <transition on="stop_campaign" to="stopCampaign" />
    </view-state>

    <action-state id="completeCampaign">
        <evaluate expression="businessCampaignFlowActions.completeCampaign(couponCampaign.campaignId, couponCampaign.bizId)" />
        <transition on-exception="com.receiptofi.web.flow.exception.BusinessCampaignException"
                    to="campaignReview" />
        <transition to="home"/>
    </action-state>

    <action-state id="stopCampaign">
        <evaluate expression="businessCampaignFlowActions.stopCampaign(couponCampaign.campaignId, couponCampaign.bizId)" />
        <transition on-exception="com.receiptofi.web.flow.exception.BusinessCampaignException"
                    to="campaignReview" />
        <transition to="home"/>
    </action-state>

    <end-state id="home" view="externalRedirect:#{'/business/landing.htm'}" />
</flow>