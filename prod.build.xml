<?xml version="1.0"?>
<project name="receiptofi-prod" basedir="." default="usage">
    <property file="build.properties" />
    <property name="name"                       value="receipt" />
    <property name="database"                   value="rm" />
    <property name="database.test"              value="rm-test"/>

    <property name="src.dir"                    value="src" />
    <property name="web.dir"                    value="WebContent" />
    <property name="build.dir"                  value="${web.dir}/WEB-INF/classes" />
    <property name="test.dir"                   value="test" />
    <property name="resources.dir"              value="resources" />
    <property name="resources.conf.dir"         value="${resources.dir}/conf" />
    <property name="resources.conf.prod.dir"    value="${resources.conf.dir}/production" />
    <property name="prod.ready.dir"             value="production_ready" />
    <property name="prod.ready.build.dir"       value="${prod.ready.dir}/WEB-INF/classes" />
    <property name="datadump.dir"               value="${resources.dir}/dump/${database}" />

    <!-- TODO implement proguard -->
    <taskdef resource="proguard/ant/task.properties" classpath="./tools/lib/proguard.jar" />
    <proguard configuration="./tools/proguard.cfg"/>

    <path id="master-classpath">
        <fileset dir="${web.dir}/WEB-INF/lib">
            <include name="*.jar" />
        </fileset>
        <!-- We need the servlet API classes: -->
        <!-- * for Tomcat 5/6 use servlet-api.jar -->
        <!-- * for other app servers - check the docs -->
        <fileset dir="${appserver.lib}">
            <include name="servlet*.jar" />
        </fileset>
        <pathelement path="${build.dir}" />
    </path>

    <target name="usage">
        <echo message="" />
        <echo message="${name} build file" />
        <echo message="-----------------------------------" />
        <echo message="" />
        <echo message="Available targets are:" />
        <echo message="" />
        <echo message="build     --> Build the application" />
        <echo message="deploy    --> Deploy application as directory" />
        <echo message="deploywar --> Deploy application as a WAR file" />
        <echo message="install   --> Install application in Tomcat" />
        <echo message="reload    --> Reload application in Tomcat" />
        <echo message="start     --> Start Tomcat application" />
        <echo message="stop      --> Stop Tomcat application" />
        <echo message="list      --> List Tomcat applications" />
        <echo message="" />
    </target>

    <target name="init-db" description="Initialize the database to starting point by restoring from database dump">
        <exec executable="mongorestore">
            <arg value="--db"/>
            <arg value="${database}"/>
            <arg value="${datadump.dir}"/>
        </exec>
    </target>

    <target name="all" depends="undeploy, clean, compile, deploy-prod-war">
        <echo message="Deployed new build" />
    </target>

    <target name="resources" description="Moves resources to appropriate place" depends="clean">
        <delete dir="${prod.ready.dir}" />
        <mkdir dir="${prod.ready.dir}" />

        <copy todir="${prod.ready.build.dir}">
            <fileset dir="${resources.dir}">
                <include name="log4j.web.properties" />
                <include name="messages.properties" />
            </fileset>
        </copy>
        <copy todir="${prod.ready.build.dir}/conf">
            <fileset dir="${resources.conf.dir}">
                <exclude name="dev.properties" />
                <include name="*.properties" />
            </fileset>
        </copy>
        <copy todir="${prod.ready.build.dir}/conf">
            <fileset dir="${resources.conf.prod.dir}">
                <include name="*.properties" />
            </fileset>
        </copy>
    </target>

    <target name="compile" description="Compile main source tree java files" depends="resources">
        <javac destdir="${prod.ready.build.dir}" source="1.7" target="1.7" debug="true" deprecation="false" optimize="false" failonerror="true">
            <src path="${src.dir}" />
            <classpath refid="master-classpath" />
        </javac>
    </target>

    <target name="ready-prod" depends="compile" description="Getting ready to war all the files">
        <copy todir="${prod.ready.dir}">
            <fileset dir="${web.dir}">
                <include name="**/*.jsp" />
                <include name="**/*.css" />
                <include name="**/*.js"  />
                <include name="**/*.png" />
                <include name="**/*.gif" />
                <include name="**/*.jpeg"/>
                <include name="**/*.jpg" />
                <include name="**/*.html"/>
                <include name="**/*.txt" />
                <include name="**/*.xml" />
                <include name="**/*.jar" />
                <include name="**/*.ftl" />
            </fileset>
        </copy>

        <!-- Remove Dev Servlet XML -->
        <delete>
            <fileset dir="${prod.ready.dir}/WEB-INF" includes="receipt-servlet.xml"/>
        </delete>

        <!-- Copy Prod Servlet XML -->
        <copy todir="${prod.ready.dir}/WEB-INF">
            <fileset dir="${resources.conf.prod.dir}">
                <include name="receipt-servlet.xml" />
            </fileset>
        </copy>
    </target>

    <target name="make-prod-war" depends="ready-prod" description="Build war file">
        <war destfile="${name}.war" webxml="${web.dir}/WEB-INF/web.xml">
            <fileset dir="${prod.ready.dir}">
                <include name="**/*.*" />
            </fileset>
        </war>
    </target>

    <target name="deploy-prod-war" depends="make-prod-war" description="Deploy application as a WAR file">
        <copy todir="${deploy.path}" preservelastmodified="true">
            <fileset dir=".">
                <include name="*.war" />
            </fileset>
        </copy>
    </target>

    <target name="clean" description="Clean output directories">
        <delete dir="${prod.ready.dir}" />
        <delete file="${name}.war" />
        <echo message="Cleaned" />
    </target>

    <target name="undeploy" description="Un-Deploy application">
        <delete>
            <fileset dir="${deploy.path}/${name}">
                <include name="**/*.*" />
            </fileset>
        </delete>
    </target>

    <!-- ============================================================== -->
    <!-- Tomcat tasks - remove these if you don't have Tomcat installed -->
    <!-- ============================================================== -->

    <path id="catalina-ant-classpath">
        <!-- We need the Catalina jars for Tomcat -->
        <!-- * for other app servers - check the docs -->
        <fileset dir="${appserver.lib}">
            <include name="catalina-ant.jar" />
            <include name="tomcat-coyote.jar" />
            <include name="tomcat-util.jar" />
        </fileset>
        <fileset dir="${appserver.home}/bin">
            <include name="tomcat-juli.jar" />
        </fileset>
    </path>

    <taskdef name="install" classname="org.apache.catalina.ant.DeployTask">
        <classpath refid="catalina-ant-classpath" />
    </taskdef>
    <taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask">
        <classpath refid="catalina-ant-classpath" />
    </taskdef>
    <taskdef name="list" classname="org.apache.catalina.ant.ListTask">
        <classpath refid="catalina-ant-classpath" />
    </taskdef>
    <taskdef name="start" classname="org.apache.catalina.ant.StartTask">
        <classpath refid="catalina-ant-classpath" />
    </taskdef>
    <taskdef name="stop" classname="org.apache.catalina.ant.StopTask">
        <classpath refid="catalina-ant-classpath" />
    </taskdef>

    <target name="install" description="Install application in Tomcat">
        <install url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${name}" war="${name}" />
    </target>

    <target name="reload" description="Reload application in Tomcat">
        <reload url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${name}" />
    </target>

    <target name="start" description="Start Tomcat application">
        <start url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${name}" />
    </target>

    <target name="stop" description="Stop Tomcat application">
        <stop url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${name}" />
    </target>

    <target name="list" description="List Tomcat applications">
        <list url="${tomcat.manager.url}/text" username="${tomcat.manager.username}" password="${tomcat.manager.password}" />
    </target>

    <!-- End Tomcat tasks -->

    <!-- ============================================================== -->
    <!-- Unit test -->
    <!-- ============================================================== -->

    <target name="buildtests" description="Compile test tree java files">
        <mkdir dir="${build.dir}" />
        <javac destdir="${build.dir}" source="1.7" target="1.7" debug="true" deprecation="false" optimize="false" failonerror="true">
            <src path="${test.dir}" />
            <classpath refid="master-classpath" />
        </javac>
    </target>

    <target name="tests" depends="compile, buildtests" description="Run tests">
        <junit printsummary="on" fork="false" haltonfailure="false" failureproperty="tests.failed" showoutput="true">
            <classpath refid="master-classpath" />
            <formatter type="brief" usefile="false" />

            <batchtest>
                <fileset dir="${build.dir}">
                    <include name="**/*Tests.*" />
                </fileset>
            </batchtest>

        </junit>

        <fail if="tests.failed">
            tests.failed=${tests.failed}
            ***********************************************************
            ***********************************************************
            **** One or more tests failed! Check the output ... ****
            ***********************************************************
            ***********************************************************
        </fail>
    </target>

</project>