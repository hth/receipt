ssh.settings {
    dryRun = false
    logging = 'stdout'
    timeoutSec = 600000
    identity = file('/Users/jenkins/.ssh/id_rsa')
}

remotes {
    r1 {
        host = '192.168.1.20'
        user = 'db'
    }
    r2 {
        host = '192.168.1.22'
        user = 'db'
    }
    r3 {
        host = '192.168.1.21'
        user = 'db'
    }
    r4 {
        host = '192.168.1.23'
        user = 'db'
    }
}

task whoami << {
    ssh.run {
        session(remotes.r1) {
            execute 'whoami'
        }
    }
}

task stop (dependsOn: [whoami]) {
    doLast {
        println "Stop for environment: $env"
    }

    ssh.run {
        session(remotes.r1) {
            executeSudo 'service tomcat stop'
        }
    }
}

task deploy (dependsOn: [whoami]) {
    doLast {
        println "Deploy for environment: $env"
    }

    ssh.run {
        session(remotes.r1) {
            remove '/opt/tomcat/apache-tomcat-8.5.5/webapps/ROOT', '/opt/tomcat/apache-tomcat-8.5.5/webapps/ROOT.war'
            remove '/opt/tomcat/apache-tomcat-8.5.5/webapps/receipt-mobile', '/opt/tomcat/apache-tomcat-8.5.5/webapps/receipt-mobile.war'
            put from: files(
                    '/Users/Shared/Jenkins/Home/jobs/receiptofi-sandbox-build/workspace/build/war/sandbox/ROOT-sandbox.*.war',
                    '/Users/Shared/Jenkins/Home/jobs/receiptofi.mobile-sandbox-build/workspace/build/war/sandbox/receipt-mobile-sandbox.*.war'
            ), into: '/usr/local/tomcat/webapps/'
        }
    }
}

task start << {
    doLast {
        println "Starting Tomcat : $env"
    }

    ssh.run {
        session(remotes.r1) {
            executeSudo 'service tomcat start'
        }
    }
}

task checkWebServers << {
    ssh.run {
        session(remotes.r1) {
            // Execute a command
            def result = execute 'sudo service httpd status'

            // Any Gradle methods or properties are available in a session closure
            copy {
                from "src/main/resources/example"
                into "$buildDir/tmp"
            }

            // Also Groovy methods or properties are available in a session closure
            println result
        }
        session(remotes.r2) {
            def result = execute 'sudo service httpd status'

            // Also Groovy style assertion is available in a session closure
            assert result.contains('running')
        }
    }
}